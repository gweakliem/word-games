buildscript {
  dependencies {
    classpath "org.postgresql:postgresql:42.2.2"
  }
}

plugins {
  id "org.jetbrains.kotlin.jvm" version "1.2.31"
  id 'application'
  id "org.flywaydb.flyway" version "5.0.7"
  id "nu.studer.jooq" version "2.0.11"
}

ext {
  deps = [
      ktor      : '0.9.1',
      kotlin    : '1.2.31',
      // also see version in buildscript
      postgresql: '42.2.2',
      jackson   : '2.9.5',
      slf4j     : '1.7.25'
  ]

  dbUser = 'local-dev'
  dbPass = 'local-dev'
}

mainClassName = 'KtorDemoKt'

repositories {
  jcenter()
  maven { url 'https://dl.bintray.com/kotlin/ktor' }
}

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$deps.kotlin"
  compile "io.ktor:ktor-server-core:$deps.ktor"
  compile "io.ktor:ktor-server-netty:$deps.ktor"
  compile "io.ktor:ktor-jackson:$deps.ktor"

  compile "com.fasterxml.jackson.core:jackson-databind:$deps.jackson"
  compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$deps.jackson"
  compile "com.fasterxml.jackson.module:jackson-module-kotlin:$deps.jackson"

  runtime "ch.qos.logback:logback-classic:1.2.3"
  runtime "org.slf4j:jcl-over-slf4j:$deps.slf4j"

  compile 'com.google.inject:guice:4.2.0'

  compile 'org.skife.config:config-magic:0.17'
  compile 'commons-configuration:commons-configuration:1.8'

  compile 'com.zaxxer:HikariCP:3.0.0'
  compile 'org.jooq:jooq'
  runtime "org.postgresql:postgresql:$deps.postgresql"
  jooqRuntime "org.postgresql:postgresql:$deps.postgresql"
}

configurations.all {
  // don't let commons logging creep into the classpath; use jcl-over-slf4j instead
  exclude group: 'commons-logging', module: 'commons-logging'
}

flyway {
  url = 'jdbc:postgresql://localhost:5432/ktor-demo'
  user = dbUser
  password = dbPass
}

jooq {
  version = '3.10.6'
  edition = 'OSS'

  ktorDemo(sourceSets.main) {
    jdbc {
      driver = 'org.postgresql.Driver'
      url = 'jdbc:postgresql://localhost:5432/ktor-demo'
      user = dbUser
      password = dbPass
    }
    generator {
      target {
        packageName = 'org.mpierce.ktordemo.jooq'
      }
      database {
        inputSchema = 'public'
        excludes = 'flyway_schema_history'
      }
      generate {
        generatedAnnotation = false
      }
    }
  }
}

compileKotlin.dependsOn(generateKtorDemoJooqSchemaSource)
generateKtorDemoJooqSchemaSource.dependsOn(flywayMigrate)

tasks.generateKtorDemoJooqSchemaSource.with {
  javaExecSpec = { JavaExecSpec s ->
    // for some reason we also need to enable this here
    s.jvmArgs '--add-modules', 'java.xml.bind'
  }
}

compileKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}
compileTestKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}
kotlin {
  experimental {
    coroutines "enable"
  }
}
